{"version":3,"sources":["components/StudentLogin.js","components/FacultyLogin.js","components/StudentRegister.js","components/FacultyRegister.js","components/LoginPage.js","components/RegisterPage.js","components/FacultyDashboard.js","components/StudentDashboard.js","App.js","reportWebVitals.js","firebase.js","index.js"],"names":["StudentLogin","rollNo","setRollNo","useState","dob","setDob","error","setError","navigate","useNavigate","React","createElement","onSubmit","async","e","preventDefault","response","axios","post","rollNumber","token","studentDetails","data","localStorage","setItem","name","branch","_error$response","_error$response$data","message","type","placeholder","value","onChange","target","required","className","FacultyLogin","email","setEmail","password","setPassword","auth","getAuth","userCredential","signInWithEmailAndPassword","idToken","user","getIdToken","console","log","res","facultyDetails","alert","StudentRegister","formData","setFormData","registerNumber","section","batchYear","yearOfEntry","fatherName","fatherOccupation","educationOccupation","familyBackground","parentPhoneNo","address","languagesKnown","guardianName","lastSchoolName","mediumOfInstructions","maths","physics","chemistry","cutOff","quota","firstYearCounselor","secondYearCounselor","thirdYearCounselor","finalYearCounselor","handleChange","prevState","disabled","FacultyRegister","prevData","err","LoginPage","Link","to","RegisterPage","FacultyDashboard","selectedTab","setSelectedTab","loading","setLoading","branches","academicYears","semesters","sections","selectedBranch","setSelectedBranch","selectedAcademicYear","setSelectedAcademicYear","selectedSemester","setSelectedSemester","selectedSection","setSelectedSection","selectedSubject","setSelectedSubject","selectedExamType","setSelectedExamType","setFacultyDetails","subjects","setSubjects","assessmentStudents","setAssessmentStudents","attendanceStudents","setAttendanceStudents","studentRollNoInput","setStudentRollNoInput","studentData","setStudentData","studentMarks","setStudentMarks","studentAttendance","setStudentAttendance","studentLoading","setStudentLoading","studentError","setStudentError","useEffect","getItem","headers","Authorization","get","status","removeItem","fetchFacultyDetails","params","semester","fetchSubjects","handleFetchAssessmentStudents","subjectCode","academicYear","handleFetchAttendanceStudents","handleSaveAssessments","length","assessments","map","student","marks","Math","min","parseFloat","examType","handleSaveAttendance","attendanceData","attendance","handleInputChange","studentsArray","setStudentsArray","index","field","updated","numVal","isNaN","handleLogout","handleStudentSearch","studentRes","marksRes","attendanceRes","HomeButton","onClick","renderTabContent","Fragment","b","key","year","s","sec","subject","subject_code","subject_name","groupedMarks","reduce","acc","mark","sem","toString","push","groupedAttendance","record","createdAt","updatedAt","Object","keys","marks_id","cat1","cat2","model","att","attendance_id","attendance_percentage","StudentDashboard","setStudentDetails","setMarks","setAttendance","studentResponse","fetchedStudent","subjectsResponse","groupBySemester","marksResponse","groupMarksBySemester","attendanceResponse","groupAttendanceBySemester","fetchStudentData","style","margin","subject_id","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getAnalytics","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a87ff316.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/StudentLogin.css\";\r\n\r\n\r\nconst StudentLogin = () => {\r\n  const [rollNo, setRollNo] = useState(\"\");\r\n  const [dob, setDob] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(\"\");\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:5000/api/students/login\", {\r\n        rollNumber: rollNo,\r\n        dob: dob,\r\n      });\r\n\r\n      const { token, studentDetails } = response.data;\r\n\r\n      // Store student details and token\r\n      localStorage.setItem(\"studentToken\", token);\r\n      localStorage.setItem(\"studentRollNo\", studentDetails.rollNumber);\r\n      localStorage.setItem(\"studentName\", studentDetails.name);\r\n      localStorage.setItem(\"studentBranch\", studentDetails.branch);\r\n      localStorage.setItem(\"studentDob\", studentDetails.dob);\r\n\r\n      // Redirect to dashboard\r\n      navigate(\"/student-dashboard\");\r\n    } catch (error) {\r\n      setError(error.response?.data?.message || \"Login failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h1><strong>Student Login</strong></h1>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Roll Number\"\r\n        value={rollNo}\r\n        onChange={(e) => setRollNo(e.target.value)}\r\n        required\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        placeholder=\"Date of Birth\"\r\n        value={dob}\r\n        onChange={(e) => setDob(e.target.value)}\r\n        required\r\n      />\r\n      <button type=\"submit\">Login</button>\r\n      {error && <p className=\"error\">{error}</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StudentLogin;\r\n","// src/components/FacultyLogin.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport '../styles/FacultyLogin.css';\r\n\r\nconst FacultyLogin = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const auth = getAuth();\r\n    try {\r\n      // Sign in with Firebase Auth\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      const idToken = await userCredential.user.getIdToken();\r\n\r\n      // Optionally store token/email in localStorage\r\n      localStorage.setItem('facultyToken', idToken);\r\n      localStorage.setItem('facultyEmail', email);\r\n      console.log(idToken);\r\n      // Send the idToken and email to your backend for verification and to fetch faculty details\r\n      const res = await axios.post('http://localhost:5000/api/faculty/login', { idToken, email });\r\n      console.log(\"Faculty Details:\", res.data.facultyDetails);\r\n      navigate('/faculty-dashboard');\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error.message);\r\n      alert(\"Login failed: \" + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <h2>Faculty Login</h2>\r\n      <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Email\" required />\r\n      <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Password\" required />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default FacultyLogin;\r\n","// src/components/StudentRegister.js\r\nimport React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Register.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst StudentRegister = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    rollNumber: \"\",\r\n    dob: \"\",\r\n    registerNumber: \"\",\r\n    branch: \"\",\r\n    section: \"\",\r\n    batchYear: \"\",\r\n    yearOfEntry: \"\",\r\n    fatherName: \"\",\r\n    fatherOccupation: \"\",\r\n    educationOccupation: \"\",\r\n    familyBackground: \"\",\r\n    parentPhoneNo: \"\",\r\n    address: \"\",\r\n    languagesKnown: \"\",\r\n    guardianName: \"\",\r\n    lastSchoolName: \"\",\r\n    mediumOfInstructions: \"\",\r\n    maths: \"\",\r\n    physics: \"\",\r\n    chemistry: \"\",\r\n    cutOff: \"\",\r\n    quota: \"\",\r\n    firstYearCounselor: \"\",\r\n    secondYearCounselor: \"\",\r\n    thirdYearCounselor: \"\",\r\n    finalYearCounselor: \"\",\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevState) => ({\r\n      ...prevState,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Submit the form data to the API endpoint\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Post the registration data to the server.\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/students/register\",\r\n        formData\r\n      );\r\n      console.log(\"Registration successful:\", response.data);\r\n      alert(\"Student registered successfully!\");\r\n      navigate(\"/\"); // Redirect as needed (e.g., to login)\r\n    } catch (error) {\r\n      console.error(\"Error during registration:\", error);\r\n      alert(\"Registration failed. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"register-card\">\r\n        <h2>Student Registration</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          {/* Basic Student Details */}\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            placeholder=\"Name\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"rollNumber\"\r\n            value={formData.rollNumber}\r\n            onChange={handleChange}\r\n            placeholder=\"Roll Number\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            name=\"dob\"\r\n            value={formData.dob}\r\n            onChange={handleChange}\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"registerNumber\"\r\n            value={formData.registerNumber}\r\n            onChange={handleChange}\r\n            placeholder=\"Register Number\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <select\r\n            name=\"branch\"\r\n            value={formData.branch}\r\n            onChange={handleChange}\r\n            className=\"register-input\"\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select Branch\r\n            </option>\r\n            <option value=\"CSE\">CSE</option>\r\n            <option value=\"IT\">IT</option>\r\n            <option value=\"AIDS\">AIDS</option>\r\n            <option value=\"ECE\">ECE</option>\r\n            <option value=\"EEE\">EEE</option>\r\n            <option value=\"MECH\">MECH</option>\r\n            <option value=\"CIVIL\">CIVIL</option>\r\n          </select>\r\n          <select\r\n            name=\"section\"\r\n            value={formData.section}\r\n            onChange={handleChange}\r\n            className=\"register-input\"\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select Section\r\n            </option>\r\n            <option value=\"A\">A</option>\r\n            <option value=\"B\">B</option>\r\n          </select>\r\n          <select\r\n            name=\"batchYear\"\r\n            value={formData.batchYear}\r\n            onChange={handleChange}\r\n            className=\"register-input\"\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select Batch Year\r\n            </option>\r\n            <option value=\"2025\">2025</option>\r\n            <option value=\"2026\">2026</option>\r\n            <option value=\"2027\">2027</option>\r\n            <option value=\"2028\">2028</option>\r\n          </select>\r\n          <input\r\n            type=\"number\"\r\n            name=\"yearOfEntry\"\r\n            value={formData.yearOfEntry}\r\n            onChange={handleChange}\r\n            placeholder=\"Year of Entry\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n\r\n          {/* Parent and Background Details */}\r\n          <input\r\n            type=\"text\"\r\n            name=\"fatherName\"\r\n            value={formData.fatherName}\r\n            onChange={handleChange}\r\n            placeholder=\"Father's Name\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"fatherOccupation\"\r\n            value={formData.fatherOccupation}\r\n            onChange={handleChange}\r\n            placeholder=\"Father's Occupation\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"educationOccupation\"\r\n            value={formData.educationOccupation}\r\n            onChange={handleChange}\r\n            placeholder=\"Education Occupation\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <textarea\r\n            name=\"familyBackground\"\r\n            value={formData.familyBackground}\r\n            onChange={handleChange}\r\n            placeholder=\"Family Background\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"parentPhoneNo\"\r\n            value={formData.parentPhoneNo}\r\n            onChange={handleChange}\r\n            placeholder=\"Parent's Phone Number\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <textarea\r\n            name=\"address\"\r\n            value={formData.address}\r\n            onChange={handleChange}\r\n            placeholder=\"Address\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"languagesKnown\"\r\n            value={formData.languagesKnown}\r\n            onChange={handleChange}\r\n            placeholder=\"Languages Known\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"guardianName\"\r\n            value={formData.guardianName}\r\n            onChange={handleChange}\r\n            placeholder=\"Guardian Name\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastSchoolName\"\r\n            value={formData.lastSchoolName}\r\n            onChange={handleChange}\r\n            placeholder=\"Last School Name\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"mediumOfInstructions\"\r\n            value={formData.mediumOfInstructions}\r\n            onChange={handleChange}\r\n            placeholder=\"Medium of Instructions\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n\r\n          {/* Academic Details */}\r\n          <input\r\n            type=\"number\"\r\n            name=\"maths\"\r\n            value={formData.maths}\r\n            onChange={handleChange}\r\n            placeholder=\"Marks in Maths\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"physics\"\r\n            value={formData.physics}\r\n            onChange={handleChange}\r\n            placeholder=\"Marks in Physics\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"chemistry\"\r\n            value={formData.chemistry}\r\n            onChange={handleChange}\r\n            placeholder=\"Marks in Chemistry\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            name=\"cutOff\"\r\n            value={formData.cutOff}\r\n            onChange={handleChange}\r\n            placeholder=\"CutOff\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"quota\"\r\n            value={formData.quota}\r\n            onChange={handleChange}\r\n            placeholder=\"Quota\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n\r\n          {/* Counselor Names */}\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstYearCounselor\"\r\n            value={formData.firstYearCounselor}\r\n            onChange={handleChange}\r\n            placeholder=\"Counselor Name (1st Year)\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"secondYearCounselor\"\r\n            value={formData.secondYearCounselor}\r\n            onChange={handleChange}\r\n            placeholder=\"Counselor Name (2nd Year)\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"thirdYearCounselor\"\r\n            value={formData.thirdYearCounselor}\r\n            onChange={handleChange}\r\n            placeholder=\"Counselor Name (3rd Year)\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"finalYearCounselor\"\r\n            value={formData.finalYearCounselor}\r\n            onChange={handleChange}\r\n            placeholder=\"Counselor Name (Final Year)\"\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n\r\n          <button type=\"submit\" className=\"submit-button\">\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentRegister;\r\n","// src/components/FacultyRegister.js\r\nimport React, { useState } from 'react';\r\nimport '../styles/Register.css';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst FacultyRegister = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    branch: '',\r\n  });\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  // Submit registration form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const response = await axios.post('http://localhost:5000/api/faculty/register', formData);\r\n      console.log('Registration successful:', response.data);\r\n      alert('Faculty registered successfully');\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.error('Error registering faculty:', err);\r\n      alert('Error occurred while registering');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register-container\">\r\n      <div className=\"register-card\">\r\n        <h2>Faculty Registration</h2>\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Faculty Name\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleChange}\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n            className=\"register-input\"\r\n            required\r\n          />\r\n          <select\r\n            name=\"branch\"\r\n            value={formData.branch}\r\n            onChange={handleChange}\r\n            className=\"register-input\"\r\n            required\r\n          >\r\n            <option value=\"\" disabled>\r\n              Select Branch\r\n            </option>\r\n            <option value=\"CSE\">CSE</option>\r\n            <option value=\"IT\">IT</option>\r\n            <option value=\"AIDS\">AIDS</option>\r\n            <option value=\"ECE\">ECE</option>\r\n            <option value=\"EEE\">EEE</option>\r\n            <option value=\"MECH\">MECH</option>\r\n            <option value=\"CIVIL\">CIVIL</option>\r\n          </select>\r\n          <button type=\"submit\" className=\"register-btn\">\r\n            Register Faculty\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacultyRegister;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../styles/LoginPage.css';\r\n\r\nconst LoginPage = () => {\r\n    \r\n    return (\r\n        <div className=\"form-container\">\r\n            <h2>Login Page</h2>\r\n\r\n            \r\n                <div className=\"role-selection\">\r\n                    <h3>Select Your Role</h3>\r\n                    <Link to=\"/student-login\">\r\n                        <button>Login as Student</button>\r\n                    </Link>\r\n                    <Link to=\"/faculty-login\">\r\n                        <button>Login as Faculty</button>\r\n                    </Link>\r\n                </div>\r\n            \r\n            <div className=\"register-section\">\r\n                <h4>Don't have an account?</h4>\r\n                <Link to=\"/form-container\">\r\n                    <button>Register</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../styles/RegisterPage.css';\r\n \r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h2>Registration Page</h2>\r\n            <div className=\"register-options\">\r\n                <Link to=\"/student-register\">\r\n                    <button>Register as Student</button>\r\n                </Link>\r\n                <Link to=\"/faculty-register\">\r\n                    <button>Register as Faculty</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;\r\n","// src/components/FacultyDashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/FacultyDashboard.css';\r\n\r\nconst FacultyDashboard = () => {\r\n  // UI States\r\n  const [selectedTab, setSelectedTab] = useState('details');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Dropdown options\r\n  const branches = ['CSE', 'AIDS', 'IT', 'ECE', 'EEE', 'MECH', 'CIVIL'];\r\n  const academicYears = ['2025', '2026', '2027', '2028'];\r\n  const semesters = ['1', '2', '3', '4', '5', '6', '7', '8'];\r\n  const sections = ['A', 'B'];\r\n\r\n  // Filters for assessments & attendance\r\n  const [selectedBranch, setSelectedBranch] = useState('');\r\n  const [selectedAcademicYear, setSelectedAcademicYear] = useState('');\r\n  const [selectedSemester, setSelectedSemester] = useState('');\r\n  const [selectedSection, setSelectedSection] = useState('');\r\n  const [selectedSubject, setSelectedSubject] = useState('');\r\n  const [selectedExamType, setSelectedExamType] = useState('');\r\n\r\n  // Data from backend (faculty details, subjects, assessment, attendance)\r\n  const [facultyDetails, setFacultyDetails] = useState(null);\r\n  const [subjects, setSubjects] = useState([]);\r\n  const [assessmentStudents, setAssessmentStudents] = useState([]);\r\n  const [attendanceStudents, setAttendanceStudents] = useState([]);\r\n\r\n  // State for student search in the Students tab\r\n  const [studentRollNoInput, setStudentRollNoInput] = useState('');\r\n  const [studentData, setStudentData] = useState(null);\r\n  const [studentMarks, setStudentMarks] = useState([]);\r\n  const [studentAttendance, setStudentAttendance] = useState([]);\r\n  const [studentLoading, setStudentLoading] = useState(false);\r\n  const [studentError, setStudentError] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // Helper functions to group records by semester\r\n  const groupMarksBySemester = (marks) => {\r\n    return marks.reduce((acc, mark) => {\r\n      const sem = mark.semester ? mark.semester.toString() : 'Unknown';\r\n      if (!acc[sem]) acc[sem] = [];\r\n      acc[sem].push(mark);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const groupAttendanceBySemester = (attendance) => {\r\n    return attendance.reduce((acc, record) => {\r\n      const sem = record.semester ? record.semester.toString() : 'Unknown';\r\n      if (!acc[sem]) acc[sem] = [];\r\n      acc[sem].push(record);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  // Fetch faculty details on mount\r\n  useEffect(() => {\r\n    const fetchFacultyDetails = async () => {\r\n      try {\r\n        const token = localStorage.getItem('facultyToken');\r\n        const email = localStorage.getItem('facultyEmail');\r\n        if (!token || !email) {\r\n          navigate('/faculty-login');\r\n          return;\r\n        }\r\n        const headers = { Authorization: `Bearer ${token}` };\r\n        const res = await axios.get(`http://localhost:5000/api/faculty/details?email=${email}`, { headers });\r\n        setFacultyDetails(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching faculty details:', error.message);\r\n        if (error.response?.status === 401) {\r\n          localStorage.removeItem('facultyToken');\r\n          localStorage.removeItem('facultyEmail');\r\n          navigate('/');\r\n        }\r\n      }\r\n    };\r\n    fetchFacultyDetails();\r\n  }, [navigate]);\r\n\r\n  // Fetch subjects when branch, academicYear, and semester are selected\r\n  useEffect(() => {\r\n    const fetchSubjects = async () => {\r\n      try {\r\n        const res = await axios.get('http://localhost:5000/api/subjects', {\r\n          params: { batchYear: selectedAcademicYear, semester: selectedSemester, branch: selectedBranch },\r\n        });\r\n        setSubjects(res.data);\r\n      } catch (error) {\r\n        console.error('Error fetching subjects:', error.message);\r\n      }\r\n    };\r\n    if (selectedAcademicYear && selectedSemester && selectedBranch) {\r\n      fetchSubjects();\r\n    }\r\n  }, [selectedAcademicYear, selectedSemester, selectedBranch]);\r\n\r\n  // Fetch students for assessments\r\n  const handleFetchAssessmentStudents = async () => {\r\n    if (!selectedBranch || !selectedAcademicYear || !selectedSemester || !selectedSection || !selectedSubject || !selectedExamType) {\r\n      alert('Please select branch, academic year, semester, section, subject, and exam type for assessments.');\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get('http://localhost:5000/api/faculty/students', {\r\n        params: {\r\n          branch: selectedBranch,\r\n          section: selectedSection,\r\n          subjectCode: selectedSubject,\r\n          academicYear: selectedAcademicYear,\r\n          semester: selectedSemester,\r\n        },\r\n      });\r\n      setAssessmentStudents(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching assessment students:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Fetch students for attendance\r\n  const handleFetchAttendanceStudents = async () => {\r\n    if (!selectedBranch || !selectedAcademicYear || !selectedSemester || !selectedSection || !selectedSubject) {\r\n      alert('Please select branch, academic year, semester, section, and subject for attendance.');\r\n      return;\r\n    }\r\n    try {\r\n      setLoading(true);\r\n      const res = await axios.get('http://localhost:5000/api/faculty/students', {\r\n        params: {\r\n          branch: selectedBranch,\r\n          section: selectedSection,\r\n          subjectCode: selectedSubject,\r\n          academicYear: selectedAcademicYear,\r\n          semester: selectedSemester,\r\n        },\r\n      });\r\n      setAttendanceStudents(res.data);\r\n    } catch (error) {\r\n      console.error('Error fetching attendance students:', error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Save assessments\r\n  const handleSaveAssessments = async () => {\r\n    if (!selectedBranch || !selectedSection || !selectedSubject || assessmentStudents.length === 0 || !selectedExamType) {\r\n      alert('Please ensure all filters are selected and assessment students are fetched.');\r\n      return;\r\n    }\r\n    const assessments = assessmentStudents.map((student) => ({\r\n      rollNumber: student.rollNumber,\r\n      marks: Math.min(parseFloat(student[selectedExamType] || 0), 100.0),\r\n    }));\r\n    try {\r\n      await axios.post('http://localhost:5000/api/faculty/marks', {\r\n        branch: selectedBranch,\r\n        section: selectedSection,\r\n        semester: selectedSemester,\r\n        batchYear: selectedAcademicYear,\r\n        subjectCode: selectedSubject,\r\n        examType: selectedExamType,\r\n        assessments,\r\n      });\r\n      alert('Assessments stored successfully!');\r\n      setSelectedTab('details');\r\n    } catch (error) {\r\n      console.error('Error saving assessments:', error.message);\r\n      alert('Error saving assessments.');\r\n    }\r\n  };\r\n\r\n  // Save attendance\r\n  const handleSaveAttendance = async () => {\r\n    if (!selectedBranch || !selectedSection || !selectedSubject || attendanceStudents.length === 0) {\r\n      alert('Please ensure all filters are selected and attendance students are fetched.');\r\n      return;\r\n    }\r\n    const attendanceData = attendanceStudents.map((student) => ({\r\n      rollNumber: student.rollNumber,\r\n      attendance: Math.min(parseFloat(student.attendance || 0), 100.0),\r\n    }));\r\n    try {\r\n      await axios.post('http://localhost:5000/api/faculty/attendance', {\r\n        branch: selectedBranch,\r\n        section: selectedSection,\r\n        semester: selectedSemester,\r\n        batchYear: selectedAcademicYear,\r\n        subjectCode: selectedSubject,\r\n        attendanceData,\r\n      });\r\n      alert('Attendance stored successfully!');\r\n      setSelectedTab('details');\r\n    } catch (error) {\r\n      console.error('Error saving attendance:', error.message);\r\n      alert('Error saving attendance.');\r\n    }\r\n  };\r\n\r\n  // Generic handler for updating input values in tables\r\n  const handleInputChange = (studentsArray, setStudentsArray, index, field, value) => {\r\n    const updated = [...studentsArray];\r\n    let numVal = parseFloat(value);\r\n    if (isNaN(numVal)) numVal = 0;\r\n    if (numVal > 100) numVal = 100;\r\n    updated[index][field] = numVal;\r\n    setStudentsArray(updated);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('facultyToken');\r\n    localStorage.removeItem('facultyEmail');\r\n    navigate('/');\r\n  };\r\n\r\n  // Handle student search by roll number in the Students tab\r\n  const handleStudentSearch = async () => {\r\n    if (!studentRollNoInput) {\r\n      alert('Please enter a roll number');\r\n      return;\r\n    }\r\n    try {\r\n      setStudentLoading(true);\r\n      setStudentError('');\r\n      // Fetch student details\r\n      const studentRes = await axios.get(`http://localhost:5000/api/students/${studentRollNoInput}`);\r\n      setStudentData(studentRes.data);\r\n      // Fetch marks/results for the student\r\n      const marksRes = await axios.get(`http://localhost:5000/api/students/marks`, {\r\n        params: { rollNumber: studentRollNoInput },\r\n      });\r\n      setStudentMarks(marksRes.data);\r\n      // Fetch attendance for the student\r\n      const attendanceRes = await axios.get(`http://localhost:5000/api/students/attendance`, {\r\n        params: { rollNumber: studentRollNoInput },\r\n      });\r\n      setStudentAttendance(attendanceRes.data);\r\n    } catch (error) {\r\n      console.error('Error fetching student data:', error.message);\r\n      setStudentError('Error fetching student data');\r\n    } finally {\r\n      setStudentLoading(false);\r\n    }\r\n  };\r\n\r\n  // Simple Home button to return to the details tab\r\n  const HomeButton = () => (\r\n    <button className=\"homebutton\" onClick={() => setSelectedTab('details')}>\r\n      Home\r\n    </button>\r\n  );\r\n\r\n  // Render content based on the selected tab\r\n  const renderTabContent = () => {\r\n    if (loading) return <p>Loading data...</p>;\r\n\r\n    switch (selectedTab) {\r\n      case 'details':\r\n        return (\r\n          <div className=\"details-tab\">\r\n            <h2>Faculty Details</h2>\r\n            <button className=\"logout\" onClick={handleLogout}>Logout</button>\r\n            {facultyDetails ? (\r\n              <>\r\n                <p><strong>Name:</strong> {facultyDetails.name}</p>\r\n                <p><strong>Email:</strong> {facultyDetails.email}</p>\r\n                <p><strong>Branch:</strong> {facultyDetails.branch || 'N/A'}</p>\r\n              </>\r\n            ) : (\r\n              <p>Loading faculty details...</p>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case 'assessment':\r\n        return (\r\n          <div className=\"assessment-tab\">\r\n            <HomeButton />\r\n            <h2>Assessment</h2>\r\n            {/* Filters for assessments */}\r\n            <label>Select Branch:</label>\r\n            <select value={selectedBranch} onChange={(e) => setSelectedBranch(e.target.value)}>\r\n              <option value=\"\">-- Select Branch --</option>\r\n              {branches.map((b) => (<option key={b} value={b}>{b}</option>))}\r\n            </select>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n            <label>Select Academic Year:</label>\r\n            <select value={selectedAcademicYear} onChange={(e) => setSelectedAcademicYear(e.target.value)}>\r\n              <option value=\"\">-- Select Academic Year --</option>\r\n              {academicYears.map((year) => (<option key={year} value={year}>{year}</option>))}\r\n            </select>&emsp;&emsp;\r\n            <br />\r\n            <label>Select Semester:</label>\r\n            <select value={selectedSemester} onChange={(e) => setSelectedSemester(e.target.value)}>\r\n              <option value=\"\">-- Select Semester --</option>\r\n              {semesters.map((s) => (<option key={s} value={s}>{s}</option>))}\r\n            </select>&emsp;&emsp;&emsp;&emsp;\r\n            <label>Select Section:</label>\r\n            <select value={selectedSection} onChange={(e) => setSelectedSection(e.target.value)}>\r\n              <option value=\"\">-- Select Section --</option>\r\n              {sections.map((sec) => (<option key={sec} value={sec}>{sec}</option>))}\r\n            </select>&emsp;&emsp;\r\n            <br />\r\n            <label>Select Subject:</label>\r\n            <select value={selectedSubject} onChange={(e) => setSelectedSubject(e.target.value)}>\r\n              <option value=\"\">-- Select Subject --</option>\r\n              {subjects.map((subject) => (\r\n                <option key={subject.subject_code} value={subject.subject_code}>\r\n                  {subject.subject_name} ({subject.subject_code})\r\n                </option>\r\n              ))}\r\n            </select><br></br>\r\n            <label>Select Exam Type:</label>\r\n            <select value={selectedExamType} onChange={(e) => setSelectedExamType(e.target.value)}>\r\n              <option value=\"\">-- Select Exam Type --</option>\r\n              <option value=\"CAT1\">CAT1</option>\r\n              <option value=\"CAT2\">CAT2</option>\r\n              <option value=\"MODEL\">MODEL</option>\r\n            </select>\r\n            <center>\r\n              <button onClick={handleFetchAssessmentStudents}>Fetch Students</button>\r\n            </center>\r\n            {loading && <p>Loading students...</p>}\r\n            {assessmentStudents.length > 0 && (\r\n              <div>\r\n                <h3>Students List (Assessments):</h3>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Roll No.</th>\r\n                      <th>Name</th>\r\n                      <th>{selectedExamType} Marks</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {assessmentStudents.map((student, index) => (\r\n                      <tr key={student.rollNumber}>\r\n                        <td>{student.rollNumber}</td>\r\n                        <td>{student.name}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"number\"\r\n                            value={student[selectedExamType] || ''}\r\n                            onChange={(e) =>\r\n                              handleInputChange(assessmentStudents, setAssessmentStudents, index, selectedExamType, e.target.value)\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n                <center>\r\n                  <button onClick={handleSaveAssessments}>Save Assessments</button>\r\n                </center>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case 'attendance':\r\n        return (\r\n          <div className=\"attendance-tab\">\r\n            <HomeButton />\r\n            <h2>Attendance</h2>\r\n            {/* Filters for attendance */}\r\n            <label>Select Branch:</label>\r\n            <select value={selectedBranch} onChange={(e) => setSelectedBranch(e.target.value)}>\r\n              <option value=\"\">-- Select Branch --</option>\r\n              {branches.map((b) => (<option key={b} value={b}>{b}</option>))}\r\n            </select>&emsp;&emsp;&emsp;&emsp;&emsp;\r\n            <label>Select Academic Year:</label>\r\n            <select value={selectedAcademicYear} onChange={(e) => setSelectedAcademicYear(e.target.value)}>\r\n              <option value=\"\">-- Select Academic Year --</option>\r\n              {academicYears.map((year) => (<option key={year} value={year}>{year}</option>))}\r\n            </select>\r\n            <br />\r\n            <label>Select Semester:</label>\r\n            <select value={selectedSemester} onChange={(e) => setSelectedSemester(e.target.value)}>\r\n              <option value=\"\">-- Select Semester --</option>\r\n              {semesters.map((s) => (<option key={s} value={s}>{s}</option>))}\r\n            </select>&emsp;&emsp;&emsp;\r\n            <label>Select Section:</label>\r\n            <select value={selectedSection} onChange={(e) => setSelectedSection(e.target.value)}>\r\n              <option value=\"\">-- Select Section --</option>\r\n              {sections.map((sec) => (<option key={sec} value={sec}>{sec}</option>))}\r\n            </select>\r\n            <br />\r\n            <label>Select Subject:</label>\r\n            <select value={selectedSubject} onChange={(e) => setSelectedSubject(e.target.value)}>\r\n              <option value=\"\">-- Select Subject --</option>\r\n              {subjects.map((subject) => (\r\n                <option key={subject.subject_code} value={subject.subject_code}>\r\n                  {subject.subject_name} ({subject.subject_code})\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <center>\r\n              <button onClick={handleFetchAttendanceStudents}>Fetch Students</button>\r\n            </center>\r\n            {loading && <p>Loading students...</p>}\r\n            {attendanceStudents.length > 0 && (\r\n              <div>\r\n                <h3>Students List (Attendance):</h3>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Roll No.</th>\r\n                      <th>Name</th>\r\n                      <th>Attendance (%)</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {attendanceStudents.map((student, index) => (\r\n                      <tr key={student.rollNumber}>\r\n                        <td>{student.rollNumber}</td>\r\n                        <td>{student.name}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"number\"\r\n                            value={student.attendance || ''}\r\n                            onChange={(e) =>\r\n                              handleInputChange(attendanceStudents, setAttendanceStudents, index, 'attendance', e.target.value)\r\n                            }\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n                <center>\r\n                  <button onClick={handleSaveAttendance}>Save Attendance</button>\r\n                </center>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case 'students':\r\n        // Group marks and attendance by semester\r\n        const groupedMarks = groupMarksBySemester(studentMarks);\r\n        const groupedAttendance = groupAttendanceBySemester(studentAttendance);\r\n        return (\r\n          <div className=\"students-tab\">\r\n            <HomeButton />\r\n            <h2>Student Details</h2>\r\n            <div className=\"search-student\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Enter Roll Number\"\r\n                value={studentRollNoInput}\r\n                onChange={(e) => setStudentRollNoInput(e.target.value)}\r\n              />\r\n              <button onClick={handleStudentSearch}>Search</button>\r\n            </div>\r\n            {studentLoading && <p>Loading student data...</p>}\r\n            {studentError && <p className=\"error\">{studentError}</p>}\r\n            {studentData && (\r\n              <div className=\"student-details\">\r\n                <center><strong><h3>Basic Details</h3></strong></center>\r\n                <table>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td><strong>Name:</strong></td>\r\n                      <td>{studentData.name}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Roll Number:</strong></td>\r\n                      <td>{studentData.rollNumber}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>DOB:</strong></td>\r\n                      <td>{studentData.dob}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Register Number:</strong></td>\r\n                      <td>{studentData.registerNumber}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Branch:</strong></td>\r\n                      <td>{studentData.branch}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Section:</strong></td>\r\n                      <td>{studentData.section}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Batch Year:</strong></td>\r\n                      <td>{studentData.batchYear}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Year Of Entry:</strong></td>\r\n                      <td>{studentData.yearOfEntry}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Father's Name:</strong></td>\r\n                      <td>{studentData.fatherName}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Father's Occupation:</strong></td>\r\n                      <td>{studentData.fatherOccupation}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Educational Occupation:</strong></td>\r\n                      <td>{studentData.educationOccupation}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Family Background:</strong></td>\r\n                      <td>{studentData.familyBackground}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Parent Phone No:</strong></td>\r\n                      <td>{studentData.parentPhoneNo}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Address:</strong></td>\r\n                      <td>{studentData.address}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Languages Known:</strong></td>\r\n                      <td>{studentData.languagesKnown}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Guardian Name:</strong></td>\r\n                      <td>{studentData.guardianName}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Last School Name:</strong></td>\r\n                      <td>{studentData.lastSchoolName}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Medium Of Instructions:</strong></td>\r\n                      <td>{studentData.mediumOfInstructions}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Maths:</strong></td>\r\n                      <td>{studentData.maths}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Physics:</strong></td>\r\n                      <td>{studentData.physics}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Chemistry:</strong></td>\r\n                      <td>{studentData.chemistry}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Cut Off:</strong></td>\r\n                      <td>{studentData.cutOff}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Quota:</strong></td>\r\n                      <td>{studentData.quota}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>First Year Counselor:</strong></td>\r\n                      <td>{studentData.firstYearCounselor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Second Year Counselor:</strong></td>\r\n                      <td>{studentData.secondYearCounselor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Third Year Counselor:</strong></td>\r\n                      <td>{studentData.thirdYearCounselor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Final Year Counselor:</strong></td>\r\n                      <td>{studentData.finalYearCounselor}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Created At:</strong></td>\r\n                      <td>{studentData.createdAt}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td><strong>Updated At:</strong></td>\r\n                      <td>{studentData.updatedAt}</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            )}\r\n            {studentMarks.length > 0 && (\r\n              <div className=\"student-results\">\r\n                <center><strong><h3>Results</h3></strong></center>\r\n                {Object.keys(groupedMarks).map((sem) => (\r\n                  <div key={sem} className=\"semester-results\">\r\n                    <strong><h4>Semester {sem}</h4></strong>\r\n                    <table>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Subject Code</th>\r\n                          <th>CAT1</th>\r\n                          <th>CAT2</th>\r\n                          <th>Model</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {groupedMarks[sem].map((mark) => (\r\n                          <tr key={mark.marks_id}>\r\n                            <td>{mark.subject_code}</td>\r\n                            <td>{mark.cat1 || 'N/A'}</td>\r\n                            <td>{mark.cat2 || 'N/A'}</td>\r\n                            <td>{mark.model || 'N/A'}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {studentAttendance.length > 0 && (\r\n              <div className=\"student-attendance\">\r\n                <center><strong><h3>Attendance</h3></strong></center>\r\n                {Object.keys(groupedAttendance).map((sem) => (\r\n                  <div key={sem} className=\"semester-attendance\">\r\n                    <strong><h4>Semester {sem}</h4></strong>\r\n                    <table>\r\n                      <thead>\r\n                        <tr>\r\n                          <th>Subject Code</th>\r\n                          <th>Attendance (%)</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {groupedAttendance[sem].map((att) => (\r\n                          <tr key={att.attendance_id}>\r\n                            <td>{att.subject_code}</td>\r\n                            <td>{att.attendance_percentage !== null ? att.attendance_percentage : 'N/A'}</td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"faculty-dashboard\">\r\n      <div className=\"sidebar\">\r\n        <button onClick={() => setSelectedTab('details')}>Faculty Details</button>\r\n        <button onClick={() => setSelectedTab('assessment')}>Assessments</button>\r\n        <button onClick={() => setSelectedTab('attendance')}>Attendance</button>\r\n        <button onClick={() => setSelectedTab('students')}>Students</button>\r\n      </div>\r\n      <div className=\"main-content\">\r\n        {renderTabContent()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FacultyDashboard;\r\n","// src/components/StudentDashboard.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/StudentDashboard.css\";\r\n\r\nconst StudentDashboard = () => {\r\n  const [selectedTab, setSelectedTab] = useState(\"details\");\r\n  const [studentDetails, setStudentDetails] = useState(null);\r\n  const [subjects, setSubjects] = useState({});\r\n  const [marks, setMarks] = useState({}); // Marks grouped by semester\r\n  const [attendance, setAttendance] = useState({}); // Attendance grouped by semester\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n\r\n  // Fetch student details, subjects, marks, and attendance\r\n  useEffect(() => {\r\n    const fetchStudentData = async () => {\r\n      const rollNo = localStorage.getItem(\"studentRollNo\");\r\n      if (!rollNo) {\r\n        navigate(\"/student-login\");\r\n        return;\r\n      }\r\n      try {\r\n        // Fetch student details\r\n        const studentResponse = await axios.get(\r\n          `http://localhost:5000/api/students/${rollNo}`\r\n        );\r\n        console.log(\"Student Response:\", studentResponse.data);\r\n        if (studentResponse.data) {\r\n          const fetchedStudent = studentResponse.data;\r\n          setStudentDetails(fetchedStudent);\r\n\r\n          // Fetch subjects based on branch and batchYear\r\n          const subjectsResponse = await axios.get(\r\n            `http://localhost:5000/api/subjects`,\r\n            {\r\n              params: {\r\n                branch: fetchedStudent.branch,\r\n                batchYear: fetchedStudent.batchYear,\r\n              },\r\n            }\r\n          );\r\n          setSubjects(groupBySemester(subjectsResponse.data));\r\n\r\n          // Fetch marks for the student\r\n          const marksResponse = await axios.get(\r\n            `http://localhost:5000/api/students/marks`,\r\n            {\r\n              params: {\r\n                rollNumber: rollNo,\r\n              },\r\n            }\r\n          );\r\n          setMarks(groupMarksBySemester(marksResponse.data));\r\n\r\n          // Fetch attendance for the student\r\n          const attendanceResponse = await axios.get(\r\n            `http://localhost:5000/api/students/attendance`,\r\n            {\r\n              params: {\r\n                rollNumber: rollNo,\r\n              },\r\n            }\r\n          );\r\n          setAttendance(groupAttendanceBySemester(attendanceResponse.data));\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchStudentData();\r\n  }, [navigate]);\r\n\r\n  // Group subjects by semester\r\n  const groupBySemester = (subjects) => {\r\n    return subjects.reduce((acc, subject) => {\r\n      const sem = subject.semester;\r\n      if (!acc[sem]) acc[sem] = [];\r\n      acc[sem].push(subject);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  // Group marks by semester\r\n  const groupMarksBySemester = (marks) => {\r\n    return marks.reduce((acc, mark) => {\r\n      const sem = mark.semester;\r\n      if (!acc[sem]) acc[sem] = [];\r\n      acc[sem].push(mark);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  // Group attendance records by semester\r\n  const groupAttendanceBySemester = (attendance) => {\r\n    return attendance.reduce((acc, record) => {\r\n      const sem = record.semester;\r\n      if (!acc[sem]) acc[sem] = [];\r\n      acc[sem].push(record);\r\n      return acc;\r\n    }, {});\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"studentRollNo\");\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // Home button component to return to details view\r\n  const HomeButton = () => (\r\n    <button onClick={() => setSelectedTab(\"details\")} style={{ margin: \"5px\" }}>\r\n      Home\r\n    </button>\r\n  );\r\n\r\n  const renderTabContent = () => {\r\n    if (loading) return <p>Loading data...</p>;\r\n\r\n    switch (selectedTab) {\r\n      case \"details\":\r\n        return (\r\n          <div className=\"details-tab\">\r\n            <h2>Student Details</h2>\r\n            <button className=\"logout\" onClick={handleLogout}>\r\n              Logout\r\n            </button>\r\n            {studentDetails ? (\r\n              <>\r\n                <p>\r\n                  <strong>Name:</strong> {studentDetails.name}\r\n                </p>\r\n                <p>\r\n                  <strong>DOB:</strong> {studentDetails.dob}\r\n                </p>\r\n                <p>\r\n                  <strong>Roll Number:</strong> {studentDetails.rollNumber}\r\n                </p>\r\n                <p>\r\n                  <strong>Register Number:</strong>{\" \"}\r\n                  {studentDetails.registerNumber}\r\n                </p>\r\n                <p>\r\n                  <strong>Branch:</strong> {studentDetails.branch}\r\n                </p>\r\n                <p>\r\n                  <strong>Section:</strong> {studentDetails.section}\r\n                </p>\r\n                <strong>Counsellor Name's:</strong>\r\n                <ul>\r\n                  <li>\r\n                    <strong>1st Year:</strong>{\" \"}\r\n                    {studentDetails.firstYearCounselor}\r\n                  </li>\r\n                  <li>\r\n                    <strong>2nd Year:</strong>{\" \"}\r\n                    {studentDetails.secondYearCounselor}\r\n                  </li>\r\n                  <li>\r\n                    <strong>3rd Year:</strong>{\" \"}\r\n                    {studentDetails.thirdYearCounselor}\r\n                  </li>\r\n                  <li>\r\n                    <strong>4th Year:</strong>{\" \"}\r\n                    {studentDetails.finalYearCounselor}\r\n                  </li>\r\n                </ul>\r\n              </>\r\n            ) : (\r\n              <p>No details available.</p>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case \"subjects\":\r\n        return (\r\n          <div className=\"subjects-tab\">\r\n            <HomeButton />\r\n            <h2>Subjects</h2>\r\n            {Object.keys(subjects).map((semester) => (\r\n              <div key={semester} className=\"semester-table\">\r\n                <h3>Semester {semester}</h3>\r\n                <table>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Subject Code</th>\r\n                      <th>Subject Name</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {subjects[semester].map((subject, index) => (\r\n                      <tr key={subject.subject_id || index}>\r\n                        <td>{subject.subject_code}</td>\r\n                        <td>{subject.subject_name}</td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        );\r\n\r\n      case \"attendance\":\r\n        return (\r\n          <div className=\"attendance-tab\">\r\n            <HomeButton />\r\n            <h2>Attendance</h2>\r\n            {Object.keys(attendance).length > 0 ? (\r\n              Object.keys(attendance).map((semester) => (\r\n                <div key={semester} className=\"semester-attendance\">\r\n                  <h3>Semester {semester}</h3>\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Subject Code</th>\r\n                        <th>Attendance (%)</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {attendance[semester].map((record, index) => (\r\n                        <tr key={record.attendance_id || index}>\r\n                          <td>{record.subject_code}</td>\r\n                          <td>\r\n                            {record.attendance_percentage !== null\r\n                              ? record.attendance_percentage\r\n                              : \"N/A\"}\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No attendance records available.</p>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case \"results\":\r\n        return (\r\n          <div className=\"results-tab\">\r\n            <HomeButton />\r\n            <h2>Results</h2>\r\n            {Object.keys(marks).length > 0 ? (\r\n              Object.keys(marks).map((semester) => (\r\n                <div key={semester} className=\"semester-results\">\r\n                  <h3>Semester {semester}</h3>\r\n                  <table>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Subject Code</th>\r\n                        <th>CAT 1</th>\r\n                        <th>CAT 2</th>\r\n                        <th>Model</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {marks[semester].map((mark, index) => (\r\n                        <tr key={mark.marks_id || index}>\r\n                          <td>{mark.subject_code}</td>\r\n                          <td>{mark.cat1 || \"N/A\"}</td>\r\n                          <td>{mark.cat2 || \"N/A\"}</td>\r\n                          <td>{mark.model || \"N/A\"}</td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <p>No marks available.</p>\r\n            )}\r\n          </div>\r\n        );\r\n\r\n      case \"changeCourse\":\r\n        return (\r\n          <div className=\"change-course-tab\">\r\n            <HomeButton />\r\n            <h2>Change Course</h2>\r\n            <p>Feature to modify courses will be implemented here.</p>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        return <p>Select a tab to view content.</p>;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"student-dashboard\">\r\n      <div className=\"sidebar\">\r\n        <button onClick={() => setSelectedTab(\"details\")}>Details</button>\r\n        <button onClick={() => setSelectedTab(\"subjects\")}>Subjects</button>\r\n        <button onClick={() => setSelectedTab(\"attendance\")}>Attendance</button>\r\n        <button onClick={() => setSelectedTab(\"results\")}>Results</button>\r\n      </div>\r\n      <div className=\"main-content\">{renderTabContent()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StudentDashboard;\r\n","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport React from 'react';\r\nimport StudentLogin from './components/StudentLogin';\r\nimport FacultyLogin from './components/FacultyLogin';\r\nimport StudentRegister from './components/StudentRegister';\r\nimport FacultyRegister from './components/FacultyRegister';\r\nimport LoginPage from './components/LoginPage';\r\nimport RegisterPage from './components/RegisterPage';\r\nimport FacultyDashboard from './components/FacultyDashboard';\r\nimport StudentDashboard from './components/StudentDashboard';\r\n\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Routes>\r\n                <Route path=\"/\" element={<LoginPage />} />\r\n                <Route path=\"/form-container\" element={<RegisterPage />} />\r\n                <Route path=\"/student-login\" element={<StudentLogin />} />\r\n                <Route path=\"/faculty-login\" element={<FacultyLogin />} />\r\n                <Route path=\"/student-register\" element={<StudentRegister />} />\r\n                <Route path=\"/faculty-register\" element={<FacultyRegister />} />\r\n                <Route path=\"/faculty-dashboard\" element={<FacultyDashboard />} />\r\n                <Route path=\"/student-dashboard\" element={<StudentDashboard />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","// src/firebase.js\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBWbBOnHDCYmVhYTBRyMSlwIecxMSQnl5Q\",\r\n  authDomain: \"smartedu-collegemanagement.firebaseapp.com\",\r\n  projectId: \"smartedu-collegemanagement\",\r\n  storageBucket: \"smartedu-collegemanagement.firebasestorage.app\",\r\n  messagingSenderId: \"117284112982\",\r\n  appId: \"1:117284112982:web:d5f2bac5fe5df9d79709f7\",\r\n  measurementId: \"G-DKW0DR8H14\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst analytics = getAnalytics(app);\r\n\r\nexport { app, analytics };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './firebase';\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}